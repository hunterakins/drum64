Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o (exit)
/usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
                              ./obj/main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

last                0x1               ./obj/main.o
flag                0x1               ./obj/main.o
i                   0x1               ./obj/main.o
controller          0x4               ./obj/main.o
tick                0x1               ./obj/main.o
data                0x1               ./obj/main.o
tock                0x1               ./obj/main.o
nop                 0x1               ./obj/main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o
LOAD ./obj/main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/libattiny85.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x2b4
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000001e                . = ALIGN (0x2)
                0x000000000000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000001e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000001e                __trampolines_end = .
 *(.progmem*)
                0x000000000000001e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000001e                __ctors_start = .
 *(.ctors)
                0x000000000000001e                __ctors_end = .
                0x000000000000001e                __dtors_start = .
 *(.dtors)
                0x000000000000001e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000001e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o
                0x000000000000001e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000001e        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002a       0x10 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
                0x000000000000002a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000003a        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o
 *(.init9)
 *(.text)
 .text          0x000000000000003e        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o
                0x000000000000003e                __vector_12
                0x000000000000003e                __bad_interrupt
                0x000000000000003e                __vector_6
                0x000000000000003e                __vector_11
                0x000000000000003e                __vector_13
                0x000000000000003e                __vector_7
                0x000000000000003e                __vector_5
                0x000000000000003e                __vector_4
                0x000000000000003e                __vector_9
                0x000000000000003e                __vector_2
                0x000000000000003e                __vector_8
                0x000000000000003e                __vector_14
 .text          0x0000000000000040      0x264 ./obj/main.o
                0x0000000000000040                timer0_init
                0x0000000000000060                timer1_init
                0x0000000000000078                pwm_init
                0x00000000000000a0                pwm_disable
                0x00000000000000ae                pwm_enable
                0x00000000000000bc                pin_interrupt_init
                0x00000000000000c6                pin_interrupt_disable
                0x00000000000000d0                spi_init
                0x00000000000000d4                spi_transfer
                0x00000000000000dc                __vector_1
                0x0000000000000172                __vector_3
                0x00000000000001ce                __vector_10
 .text          0x00000000000002a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text          0x00000000000002a4        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
                0x00000000000002a4                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000002a4        0xc ./obj/main.o
                0x00000000000002a4                main
 .text.libgcc.mul
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
                0x00000000000002b0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000002b0        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
                0x00000000000002b0                exit
                0x00000000000002b0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000002b0        0x4 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000002b4                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000002b4
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o
 .data          0x0000000000800060        0x0 ./obj/main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0xb
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o
 .bss           0x0000000000800060        0x0 ./obj/main.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_exit.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800060        0xb ./obj/main.o
                0x0000000000800060                last
                0x0000000000800061                flag
                0x0000000000800062                i
                0x0000000000800063                controller
                0x0000000000800067                tick
                0x0000000000800068                data
                0x0000000000800069                tock
                0x000000000080006a                nop
                0x000000000080006b                PROVIDE (__bss_end, .)
                0x00000000000002b4                __data_load_start = LOADADDR (.data)
                0x00000000000002b4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080006b        0x0
                0x000000000080006b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080006b                PROVIDE (__noinit_end, .)
                0x000000000080006b                _end = .
                0x000000000080006b                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./obj/main.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/crtattiny85.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(obj/poll.elf elf32-avr)
LOAD linker stubs
