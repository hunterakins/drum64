

CONTROLLER.a struct is 32 bit boolean array
the MOST IMPORTANT constant: refresh rate (rate at which buttons presses are being read, data processed)
-the refresh rate is going to determine the quantization of the system, e.g. how quantized the beats are going to be

-buffer cycle should be SLOWER than refresh cycle
-two buffers. one to be written onto while other is sent to sound card
-sound buffer: what sounds should be played, at what times?
  -how many maximum sounds to be played at 1 given point in time???
  -each sound takes some time to process some maximum



init
  load WAV files into memory

every refresh cycle:
  send pull signal to N64 controller (how?)
  analyze CONTROLLER struct (which buttons are pressed) from previous cycle
    for each button:
      if button goes from down state to up state, start generating audio for that sound
        A = snare, B = bass drum, etc. analog stick to modulate certain sounds
      update state of sound-buffer.
  sound buffer A:
    update all the bits for the current refresh cycle, with all necessary WAV file sounds
      (this will get complicated once we implement loop
  sound buffer B:
    write this to audio DAC continuously? (at 44.1 kHz?? what's the multithreading protocol for this?)
  read from shift register and update CONTROLLER struct

other functionality:
  looping?
  save to memory? (save loops to be played?)
